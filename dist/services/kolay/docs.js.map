{"version":3,"file":"docs.js","sources":["../../../src/services/kolay/docs.ts"],"sourcesContent":["import { cached, tracked } from '@glimmer/tracking';\nimport { assert } from '@ember/debug';\nimport Service, { service } from '@ember/service';\n\nimport type ApiDocs from './api-docs';\nimport type Selected from './selected';\nimport type { Manifest } from './types';\nimport type RouterService from '@ember/routing/router-service';\nimport type { UnifiedPlugin } from 'ember-repl';\n\nexport type SetupOptions = Parameters<DocsService['setup']>[0];\n\ninterface ResolveMap {\n  [moduleName: string]: ScopeMap;\n}\n\ninterface ScopeMap {\n  [identifier: string]: unknown;\n}\n\nexport default class DocsService extends Service {\n  @service declare router: RouterService;\n  @service('kolay/selected') declare selected: Selected;\n  @service('kolay/api-docs') declare apiDocs: ApiDocs;\n\n  @tracked additionalResolves?: ResolveMap;\n  @tracked additionalTopLevelScope?: ScopeMap;\n  @tracked remarkPlugins?: UnifiedPlugin[];\n  @tracked rehypePlugins?: UnifiedPlugin[];\n  _docs: Manifest | undefined;\n\n  loadManifest: () => Promise<Manifest> = () =>\n    Promise.resolve({\n      list: [],\n      tree: {},\n    } as any);\n\n  setup = async (options: {\n    /**\n     * The module of the manifest virtual module.\n     * This should be set to `await import('kolay/manifest:virtual')\n     */\n    manifest?: Promise<any>;\n\n    /**\n     * The module of the api docs virtual module.\n     * This should be set to `await import('kolay/api-docs:virtual')\n     */\n    apiDocs?: Promise<any>;\n\n    /**\n     * Additional invokables that you'd like to have access to\n     * in the markdown, without a codefence.\n     *\n     * By default, the fallowing is available:\n     * - for escaping styles / having a clean style-sandbox\n     *   - <Shadowed>\n     * - for rendering your typedoc:\n     *   - <APIDocs>\n     *   - <ComponentSignature>\n     */\n    topLevelScope?: ScopeMap;\n\n    /**\n     * Additional modules you'd like to be able to import from.\n     * This is in addition the the default modules provided by ember,\n     * and allows you to have access to private libraries without\n     * needing to publish those libraries to NPM.\n     */\n    resolve?: { [moduleName: string]: Promise<ScopeMap> };\n\n    /**\n     * Provide additional remark plugins to the default markdown compiler.\n     *\n     * These can be used to add features like notes, callouts, footnotes, etc\n     */\n    remarkPlugins?: UnifiedPlugin[];\n    /**\n     * Provide additional rehype plugins to the default html compiler.\n     *\n     * These can be used to add features syntax-highlighting to pre elements, etc\n     */\n    rehypePlugins?: UnifiedPlugin[];\n  }) => {\n    let [manifest, apiDocs, resolve] = await Promise.all([\n      options.manifest,\n      options.apiDocs,\n      promiseHash(options.resolve),\n    ]);\n\n    if (options.manifest) {\n      this.loadManifest = manifest.load;\n    }\n\n    if (options.apiDocs) {\n      this.apiDocs._packages = apiDocs.packages;\n      this.apiDocs.loadApiDocs = apiDocs.loadApiDocs;\n    }\n\n    if (options.resolve) {\n      this.additionalResolves = resolve;\n    }\n\n    if (options.topLevelScope) {\n      this.additionalTopLevelScope = options.topLevelScope;\n    }\n\n    if (options.remarkPlugins) {\n      this.remarkPlugins = options.remarkPlugins;\n    }\n\n    if (options.rehypePlugins) {\n      this.rehypePlugins = options.rehypePlugins;\n    }\n\n    this._docs = await this.loadManifest();\n\n    return this.manifest;\n  };\n\n  get docs() {\n    assert(\n      `Docs' manifest was not loaded. Be sure to call setup() before accessing anything on the docs service.`,\n      this._docs,\n    );\n\n    return this._docs;\n  }\n\n  get manifest() {\n    return this.docs;\n  }\n\n  /**\n   * The flat list of all pages.\n   * Each page knows the name of its immediate parent.\n   */\n  get pages() {\n    return this.currentGroup?.list ?? [];\n  }\n\n  /**\n   * The full page hierachy\n   */\n  get tree() {\n    return this.currentGroup?.tree ?? {};\n  }\n\n  /**\n   * We use the URL for denoting which group we're looking at.\n   * The first segment of the URL will either be a group,\n   * or part of the path segment on the root namespace.\n   *\n   * This does open us up for collisions, so maybe\n   * we'll need to alias \"root\" with something, or at\n   * the very least not use a non-path segement for it.\n   */\n  get selectedGroup() {\n    let [, /* leading slash */ first] =\n      this.router.currentURL?.split('/') || [];\n\n    if (!first) return 'root';\n\n    if (!this.availableGroups.includes(first)) return 'root';\n\n    return first;\n  }\n\n  selectGroup = (group: string) => {\n    assert(\n      `Expected group name, ${group}, to be one of ${this.availableGroups.join(', ')}`,\n      this.availableGroups.includes(group),\n    );\n\n    if (group === 'root') {\n      this.router.transitionTo('/');\n\n      return;\n    }\n\n    this.router.transitionTo(`/${group}`);\n  };\n\n  get availableGroups() {\n    let groups = this.manifest?.groups ?? [];\n\n    return groups.map((group) => group.name);\n  }\n\n  @cached\n  get currentGroup() {\n    return this.groupFor(this.selectedGroup);\n  }\n\n  groupFor = (groupName: string) => {\n    let groups = this.manifest?.groups ?? [];\n\n    let group = groups.find((group) => group.name === groupName);\n\n    assert(\n      `Could not find group in manifest under the name ${groupName}. The available groups are: ${groups.map((group) => group.name).join(', ')}`,\n      group,\n    );\n\n    return group;\n  };\n\n  /**\n   * Will return false if a url doesn't exist in any group,\n   * or the name of the group that contains the page if the url does exist.\n   */\n  groupForURL = (url: string): false | string => {\n    for (let groupName of this.availableGroups) {\n      let group = this.groupFor(groupName);\n      let page = group.list.find((page) => page.path === url);\n\n      if (page) {\n        return groupName;\n      }\n    }\n\n    return false;\n  };\n}\n\n/**\n * RSVP.hash, but native\n */\nasync function promiseHash<T>(obj?: {\n  [key: string]: Promise<T>;\n}): Promise<{ [key: string]: T }> {\n  let result: Record<string, T> = {};\n\n  if (!obj) {\n    return result;\n  }\n\n  let keys: string[] = [];\n  let promises = [];\n\n  for (let [key, promise] of Object.entries(obj)) {\n    keys.push(key);\n    promises.push(promise);\n  }\n\n  assert(\n    `Something went wrong when resolving a promise Hash`,\n    keys.length === promises.length,\n  );\n\n  let resolved = await Promise.all(promises);\n\n  for (let i = 0; i < resolved.length; i++) {\n    let key = keys[i];\n    let resolvedValue = resolved[i];\n\n    assert(`Missing key for index ${i}`, key);\n    assert(\n      `Resolved value for key ${key} is not an object`,\n      typeof resolvedValue === 'object',\n    );\n\n    result[key] = resolvedValue;\n  }\n\n  return result;\n}\n\n// DO NOT DELETE: this is how TypeScript knows how to look up your services.\ndeclare module '@ember/service' {\n  interface Registry {\n    'kolay/docs': DocsService;\n  }\n}\n"],"names":["DocsService","Service","g","prototype","service","i","void 0","tracked","loadManifest","Promise","resolve","list","tree","setup","options","manifest","apiDocs","all","promiseHash","load","_packages","packages","loadApiDocs","additionalResolves","topLevelScope","additionalTopLevelScope","remarkPlugins","rehypePlugins","_docs","docs","assert","pages","currentGroup","selectedGroup","first","router","currentURL","split","availableGroups","includes","selectGroup","group","join","transitionTo","groups","map","name","groupFor","n","cached","groupName","find","groupForURL","url","page","path","obj","result","keys","promises","key","promise","Object","entries","push","length","resolved","resolvedValue"],"mappings":"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"}