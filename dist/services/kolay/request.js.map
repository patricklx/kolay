{"version":3,"file":"request.js","sources":["../../../src/services/kolay/request.ts"],"sourcesContent":["import { cached } from '@glimmer/tracking';\nimport { service } from '@ember/service';\n\nimport { use } from 'ember-resources';\nimport { keepLatest } from 'reactiveweb/keep-latest';\nimport { RemoteData } from 'reactiveweb/remote-data';\n\nimport type DocsService from './docs';\nimport { getOwner } from '@ember/owner';\n\nexport const OUTPUT_PREFIX = `/docs/`;\nexport const OUTPUT_PREFIX_REGEX = /^\\/docs\\//;\n\n/**\n * With how data is derived here, the `fetch` request does not execute\n * if we know ahead of time that the fetch would fail.\n * e.g.: when the URL is not declared in the manifest.\n *\n * The `fetch` only occurs when `last` is accessd.\n * and `last` is not accessed if `doesPageExist` is ever false.\n */\nexport class MDRequest {\n  constructor(private urlFn: () => string) {}\n\n  @service('kolay/docs') declare docs: DocsService;\n\n  get config() {\n    // @ts-ignore\n    return getOwner(this).resolveRegistration('config:environment')\n  }\n\n  /**\n   * TODO: use a private property when we move to spec-decorators\n   */\n  @use last = RemoteData<string>(this.urlFn);\n\n  @use lastSuccessful = keepLatest({\n    value: () => this.#lastValue,\n    when: () => this.hasError,\n  });\n\n  get hasError() {\n    if (!this._doesPageExist) return true;\n\n    /**\n     * Can't have an error if we haven't made a request yet\n     */\n    if (!this.last.status) return false;\n\n    return this.last.status >= 400;\n  }\n\n  /**\n   * TODO: use a private property when we move to spec-decorators\n   */\n  @cached\n  private get _doesPageExist() {\n    let url = this.urlFn();\n    let pagePath = url\n      .slice(this.config.rootURL.length - 1)\n      .replace(OUTPUT_PREFIX_REGEX, '/');\n    let group = this.docs.groupForURL(pagePath);\n\n    return Boolean(group);\n  }\n\n  get #lastValue() {\n    if (!this._doesPageExist) return '';\n\n    return this.last.value;\n  }\n}\n"],"names":["OUTPUT_PREFIX","OUTPUT_PREFIX_REGEX","MDRequest","constructor","urlFn","g","prototype","service","i","void 0","config","getOwner","resolveRegistration","use","RemoteData","keepLatest","value","when","hasError","_doesPageExist","last","status","url","pagePath","slice","rootURL","length","replace","group","docs","groupForURL","Boolean","n","cached","#lastValue"],"mappings":";;;;;;;;AAUO,MAAMA,aAAa,GAAG,CAAQ,MAAA;AAC9B,MAAMC,mBAAmB,GAAG;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,SAAS,CAAC;EACrBC,WAAWA,CAASC,KAAmB,EAAE;IAAA,IAArBA,CAAAA,KAAmB,GAAnBA,KAAmB;AAAG;AAAC,EAAA;AAAAC,IAAAA,CAAA,MAAAC,SAAA,EAAA,MAAA,EAAA,CAE1CC,OAAO,CAAC,YAAY,CAAC,CAAA,CAAA;AAAA;AAAA,EAAA,KAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,MAAA,CAAA,EAAAC,KAAA,CAAA;EAEtB,IAAIC,MAAMA,GAAG;AACX;IACA,OAAOC,QAAQ,CAAC,IAAI,CAAC,CAACC,mBAAmB,CAAC,oBAAoB,CAAC;AACjE;;AAEA;AACF;AACA;AAFE,EAAA;IAAAP,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,MAAA,EAAA,CAGCO,GAAG,CAAA,EAAA,YAAA;AAAA,MAAA,OAAQC,UAAU,CAAS,IAAI,CAACV,KAAK,CAAC;AAAA,KAAA,CAAA;AAAA;AAAA,EAAA,KAAA,IAAAI,CAAA,CAAA,IAAA,EAAA,MAAA,CAAA,EAAAC,KAAA,CAAA;AAAA,EAAA;IAAAJ,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,gBAAA,EAAA,CAEzCO,GAAG,CAAA,EAAA,YAAA;AAAA,MAAA,OAAkBE,UAAU,CAAC;AAC/BC,QAAAA,KAAK,EAAEA,MAAM,IAAI,CAAC,UAAU;AAC5BC,QAAAA,IAAI,EAAEA,MAAM,IAAI,CAACC;AACnB,OAAC,CAAC;AAAA,KAAA,CAAA;AAAA;AAAA,EAAA,eAAA,IAAAV,CAAA,CAAA,IAAA,EAAA,gBAAA,CAAA,EAAAC,KAAA,CAAA;EAEF,IAAIS,QAAQA,GAAG;AACb,IAAA,IAAI,CAAC,IAAI,CAACC,cAAc,EAAE,OAAO,IAAI;;AAErC;AACJ;AACA;IACI,IAAI,CAAC,IAAI,CAACC,IAAI,CAACC,MAAM,EAAE,OAAO,KAAK;AAEnC,IAAA,OAAO,IAAI,CAACD,IAAI,CAACC,MAAM,IAAI,GAAG;AAChC;;AAEA;AACF;AACA;EACE,IACYF,cAAcA,GAAG;AAC3B,IAAA,IAAIG,GAAG,GAAG,IAAI,CAAClB,KAAK,EAAE;IACtB,IAAImB,QAAQ,GAAGD,GAAG,CACfE,KAAK,CAAC,IAAI,CAACd,MAAM,CAACe,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CACrCC,OAAO,CAAC1B,mBAAmB,EAAE,GAAG,CAAC;IACpC,IAAI2B,KAAK,GAAG,IAAI,CAACC,IAAI,CAACC,WAAW,CAACP,QAAQ,CAAC;IAE3C,OAAOQ,OAAO,CAACH,KAAK,CAAC;AACvB;AAAC,EAAA;IAAAI,CAAA,CAAA,IAAA,CAAA1B,SAAA,EAAA,gBAAA,EAAA,CATA2B,MAAM,CAAA,CAAA;AAAA;EAWP,IAAI,UAAUC,GAAG;AACf,IAAA,IAAI,CAAC,IAAI,CAACf,cAAc,EAAE,OAAO,EAAE;AAEnC,IAAA,OAAO,IAAI,CAACC,IAAI,CAACJ,KAAK;AACxB;AACF;;;;"}