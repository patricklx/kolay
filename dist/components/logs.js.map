{"version":3,"file":"logs.js","sources":["../../src/components/logs.gts"],"sourcesContent":["/* eslint-disable no-console */ import { template } from \"@ember/template-compiler\";\nimport Component from '@glimmer/component';\nimport { registerDestructor } from '@ember/destroyable';\nimport { Scroller } from 'ember-primitives/components/scroller';\nimport { TrackedArray } from 'tracked-built-ins';\nimport type { TOC } from '@ember/component/template-only';\nimport type Owner from '@ember/owner';\nconst original = {\n    log: console.log,\n    warn: console.warn,\n    error: console.error,\n    debug: console.debug,\n    info: console.info\n} as const;\ntype Levels = keyof typeof original;\nconst LEVELS = Object.keys(original) as Levels[];\nlet formatter = new Intl.DateTimeFormat('en-GB', {\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    fractionalSecondDigits: 2\n});\nconst format = (date1: Date)=>formatter.format(date1);\ninterface Log {\n    level: string;\n    timestamp: Date;\n    message: string;\n}\nconst LogList: TOC<{\n    Args: {\n        logs: Log[];\n    };\n}> = template(`\n  <Scroller class='kolay__log-list__scroll' as |x|>\n    {{#each @logs as |logEntry|}}\n      <div class='kolay__log-list__level {{logEntry.level}}'>\n        <span class='kolay__log-list__time'>{{format logEntry.timestamp}}</span>\n        <span>{{logEntry.message}}</span>\n      </div>\n      {{(x.scrollToBottom)}}\n    {{/each}}\n  </Scroller>\n\n  {{! prettier-ignore-start }}\n  <style>\n    .kolay__log-list__scroll { position: relative; overflow: auto; max-height:\n    10rem; filter: invert(1); .kolay__log-list__level { display: flex; gap:\n    0.5rem; } .kolay__log-list__time { border-right: 1px solid; padding-right:\n    0.5rem; } }\n  </style>\n  {{! prettier-ignore-end }}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nexport class Logs extends Component {\n    logs = new TrackedArray<Log>();\n    constructor(owner1: Owner, args1: any){\n        super(owner1, args1);\n        registerDestructor(this, ()=>LEVELS.forEach((level1)=>(console[level1] = original[level1])));\n        for (let level1 of LEVELS){\n            console[level1] = (...messageParts1)=>{\n                // If our thing fails, we want the normal\n                // log to still happen, just in case.\n                // Makes debugging easier\n                original[level1](...messageParts1);\n                (async ()=>{\n                    // We need to await here, so\n                    // we don't break {{log thing}} usage\n                    await Promise.resolve();\n                    this.logs.push({\n                        level: level1,\n                        message: messageParts1.join(' '),\n                        timestamp: new Date()\n                    });\n                })();\n            };\n        }\n    }\n    static{\n        template(`\n    <div class='kolay__in-viewport__logs'>\n      <LogList @logs={{this.logs}} />\n    </div>\n    {{! prettier-ignore-start }}\n    <style>\n      .kolay__in-viewport__logs { position: fixed; bottom: 0; left: 0; right: 0;\n      padding: 0.5rem; border: 1px solid gray; background: currentColor; filter:\n      invert(1); }\n    </style>\n    {{! prettier-ignore-end }}\n  `, {\n            component: this,\n            eval () {\n                return eval(arguments[0]);\n            }\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2tvbGF5L2tvbGF5L3VpL3NyYy9jb21wb25lbnRzL2xvZ3MuZ3RzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbmltcG9ydCBDb21wb25lbnQgZnJvbSAnQGdsaW1tZXIvY29tcG9uZW50JztcbmltcG9ydCB7IHJlZ2lzdGVyRGVzdHJ1Y3RvciB9IGZyb20gJ0BlbWJlci9kZXN0cm95YWJsZSc7XG5cbmltcG9ydCB7IFNjcm9sbGVyIH0gZnJvbSAnZW1iZXItcHJpbWl0aXZlcy9jb21wb25lbnRzL3Njcm9sbGVyJztcbmltcG9ydCB7IFRyYWNrZWRBcnJheSB9IGZyb20gJ3RyYWNrZWQtYnVpbHQtaW5zJztcblxuaW1wb3J0IHR5cGUgeyBUT0MgfSBmcm9tICdAZW1iZXIvY29tcG9uZW50L3RlbXBsYXRlLW9ubHknO1xuaW1wb3J0IHR5cGUgT3duZXIgZnJvbSAnQGVtYmVyL293bmVyJztcblxuY29uc3Qgb3JpZ2luYWwgPSB7XG4gIGxvZzogY29uc29sZS5sb2csXG4gIHdhcm46IGNvbnNvbGUud2FybixcbiAgZXJyb3I6IGNvbnNvbGUuZXJyb3IsXG4gIGRlYnVnOiBjb25zb2xlLmRlYnVnLFxuICBpbmZvOiBjb25zb2xlLmluZm8sXG59IGFzIGNvbnN0O1xuXG50eXBlIExldmVscyA9IGtleW9mIHR5cGVvZiBvcmlnaW5hbDtcblxuY29uc3QgTEVWRUxTID0gT2JqZWN0LmtleXMob3JpZ2luYWwpIGFzIExldmVsc1tdO1xuXG5sZXQgZm9ybWF0dGVyID0gbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQoJ2VuLUdCJywge1xuICBob3VyOiAnbnVtZXJpYycsXG4gIG1pbnV0ZTogJ251bWVyaWMnLFxuICBzZWNvbmQ6ICdudW1lcmljJyxcbiAgZnJhY3Rpb25hbFNlY29uZERpZ2l0czogMixcbn0pO1xuXG5jb25zdCBmb3JtYXQgPSAoZGF0ZTogRGF0ZSkgPT4gZm9ybWF0dGVyLmZvcm1hdChkYXRlKTtcblxuaW50ZXJmYWNlIExvZyB7XG4gIGxldmVsOiBzdHJpbmc7XG4gIHRpbWVzdGFtcDogRGF0ZTtcbiAgbWVzc2FnZTogc3RyaW5nO1xufVxuXG5jb25zdCBMb2dMaXN0OiBUT0M8e1xuICBBcmdzOiB7XG4gICAgbG9nczogTG9nW107XG4gIH07XG59PiA9IDx0ZW1wbGF0ZT5cbiAgPFNjcm9sbGVyIGNsYXNzPSdrb2xheV9fbG9nLWxpc3RfX3Njcm9sbCcgYXMgfHh8PlxuICAgIHt7I2VhY2ggQGxvZ3MgYXMgfGxvZ0VudHJ5fH19XG4gICAgICA8ZGl2IGNsYXNzPSdrb2xheV9fbG9nLWxpc3RfX2xldmVsIHt7bG9nRW50cnkubGV2ZWx9fSc-XG4gICAgICAgIDxzcGFuIGNsYXNzPSdrb2xheV9fbG9nLWxpc3RfX3RpbWUnPnt7Zm9ybWF0IGxvZ0VudHJ5LnRpbWVzdGFtcH19PC9zcGFuPlxuICAgICAgICA8c3Bhbj57e2xvZ0VudHJ5Lm1lc3NhZ2V9fTwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAge3soeC5zY3JvbGxUb0JvdHRvbSl9fVxuICAgIHt7L2VhY2h9fVxuICA8L1Njcm9sbGVyPlxuXG4gIHt7ISBwcmV0dGllci1pZ25vcmUtc3RhcnQgfX1cbiAgPHN0eWxlPlxuICAgIC5rb2xheV9fbG9nLWxpc3RfX3Njcm9sbCB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgb3ZlcmZsb3c6IGF1dG87IG1heC1oZWlnaHQ6XG4gICAgMTByZW07IGZpbHRlcjogaW52ZXJ0KDEpOyAua29sYXlfX2xvZy1saXN0X19sZXZlbCB7IGRpc3BsYXk6IGZsZXg7IGdhcDpcbiAgICAwLjVyZW07IH0gLmtvbGF5X19sb2ctbGlzdF9fdGltZSB7IGJvcmRlci1yaWdodDogMXB4IHNvbGlkOyBwYWRkaW5nLXJpZ2h0OlxuICAgIDAuNXJlbTsgfSB9XG4gIDwvc3R5bGU-XG4gIHt7ISBwcmV0dGllci1pZ25vcmUtZW5kIH19XG48L3RlbXBsYXRlPjtcblxuZXhwb3J0IGNsYXNzIExvZ3MgZXh0ZW5kcyBDb21wb25lbnQge1xuICBsb2dzID0gbmV3IFRyYWNrZWRBcnJheTxMb2c-KCk7XG5cbiAgY29uc3RydWN0b3Iob3duZXI6IE93bmVyLCBhcmdzOiBhbnkpIHtcbiAgICBzdXBlcihvd25lciwgYXJncyk7XG5cbiAgICByZWdpc3RlckRlc3RydWN0b3IodGhpcywgKCkgPT5cbiAgICAgIExFVkVMUy5mb3JFYWNoKChsZXZlbCkgPT4gKGNvbnNvbGVbbGV2ZWxdID0gb3JpZ2luYWxbbGV2ZWxdKSksXG4gICAgKTtcblxuICAgIGZvciAobGV0IGxldmVsIG9mIExFVkVMUykge1xuICAgICAgY29uc29sZVtsZXZlbF0gPSAoLi4ubWVzc2FnZVBhcnRzKSA9PiB7XG4gICAgICAgIC8vIElmIG91ciB0aGluZyBmYWlscywgd2Ugd2FudCB0aGUgbm9ybWFsXG4gICAgICAgIC8vIGxvZyB0byBzdGlsbCBoYXBwZW4sIGp1c3QgaW4gY2FzZS5cbiAgICAgICAgLy8gTWFrZXMgZGVidWdnaW5nIGVhc2llclxuICAgICAgICBvcmlnaW5hbFtsZXZlbF0oLi4ubWVzc2FnZVBhcnRzKTtcblxuICAgICAgICAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgIC8vIFdlIG5lZWQgdG8gYXdhaXQgaGVyZSwgc29cbiAgICAgICAgICAvLyB3ZSBkb24ndCBicmVhayB7e2xvZyB0aGluZ319IHVzYWdlXG4gICAgICAgICAgYXdhaXQgUHJvbWlzZS5yZXNvbHZlKCk7XG5cbiAgICAgICAgICB0aGlzLmxvZ3MucHVzaCh7XG4gICAgICAgICAgICBsZXZlbCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VQYXJ0cy5qb2luKCcgJyksXG4gICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pKCk7XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIDx0ZW1wbGF0ZT5cbiAgICA8ZGl2IGNsYXNzPSdrb2xheV9faW4tdmlld3BvcnRfX2xvZ3MnPlxuICAgICAgPExvZ0xpc3QgQGxvZ3M9e3t0aGlzLmxvZ3N9fSAvPlxuICAgIDwvZGl2PlxuICAgIHt7ISBwcmV0dGllci1pZ25vcmUtc3RhcnQgfX1cbiAgICA8c3R5bGU-XG4gICAgICAua29sYXlfX2luLXZpZXdwb3J0X19sb2dzIHsgcG9zaXRpb246IGZpeGVkOyBib3R0b206IDA7IGxlZnQ6IDA7IHJpZ2h0OiAwO1xuICAgICAgcGFkZGluZzogMC41cmVtOyBib3JkZXI6IDFweCBzb2xpZCBncmF5OyBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7IGZpbHRlcjpcbiAgICAgIGludmVydCgxKTsgfVxuICAgIDwvc3R5bGU-XG4gICAge3shIHByZXR0aWVyLWlnbm9yZS1lbmQgfX1cbiAgPC90ZW1wbGF0ZT5cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFDN0IsT0FBTyxlQUFlLHFCQUFxQjtBQUMzQyxTQUFTLGtCQUFrQixRQUFRLHFCQUFxQjtBQUV4RCxTQUFTLFFBQVEsUUFBUSx1Q0FBdUM7QUFDaEUsU0FBUyxZQUFZLFFBQVEsb0JBQW9CO0FBRWpELGNBQWMsR0FBRyxRQUFRLGlDQUFpQztBQUMxRCxZQUFZLFdBQVcsZUFBZTtBQUV0QyxNQUFNLFdBQVc7SUFDZixLQUFLLFFBQVEsR0FBRztJQUNoQixNQUFNLFFBQVEsSUFBSTtJQUNsQixPQUFPLFFBQVEsS0FBSztJQUNwQixPQUFPLFFBQVEsS0FBSztJQUNwQixNQUFNLFFBQVEsSUFBSTtBQUNwQjtLQUVLLHNCQUFzQjtBQUUzQixNQUFNLFNBQVMsT0FBTyxJQUFJLENBQUMsYUFBYTtBQUV4QyxJQUFJLFlBQVksSUFBSSxLQUFLLGNBQWMsQ0FBQyxTQUFTO0lBQy9DLE1BQU07SUFDTixRQUFRO0lBQ1IsUUFBUTtJQUNSLHdCQUF3QjtBQUMxQjtBQUVBLE1BQU0sU0FBUyxDQUFDLE9BQU0sT0FBUyxVQUFVLE1BQU0sQ0FBQztVQUV0QztJQUNSLE9BQU8sTUFBTTtJQUNiLFdBQVc7SUFDWCxTQUFTLE1BQU07O0FBR2pCLE1BQU0sU0FBUztJQUNiO1FBQ0UsTUFBTTs7S0FFTCxTQUFVLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQmYsQ0FBQSxFQUFBO0lBQUE7UUFBQSxPQUFBLEtBQUEsU0FBQSxDQUFBLEVBQVc7SUFBRDtBQUFBO0FBRVYsT0FBTyxNQUFNLGFBQWE7SUFDeEIsT0FBTyxJQUFJLGFBQWEsT0FBTztJQUUvQixZQUFZLFFBQU8sS0FBSyxFQUFFLE9BQU0sR0FBRyxDQUFFO1FBQ25DLEtBQUssQ0FBQyxRQUFPO1FBRWIsbUJBQW1CLElBQUksRUFBRSxJQUN2QixPQUFPLE9BQU8sQ0FBQyxDQUFDLFNBQVUsQ0FBQyxPQUFPLENBQUMsT0FBTSxHQUFHLFFBQVEsQ0FBQyxPQUFNO1FBRzdELEtBQUssSUFBSSxVQUFTLE9BQVE7WUFDeEIsT0FBTyxDQUFDLE9BQU0sR0FBRyxDQUFDLEdBQUc7Z0JBQ25CLHlDQUF5QztnQkFDekMscUNBQXFDO2dCQUNyQyx5QkFBeUI7Z0JBQ3pCLFFBQVEsQ0FBQyxPQUFNLElBQUk7Z0JBRW5CLENBQUM7b0JBQ0MsNEJBQTRCO29CQUM1QixxQ0FBcUM7b0JBQ3JDLE1BQU0sUUFBUSxPQUFPO29CQUVyQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzt3QkFDYixPQUFBO3dCQUNBLFNBQVMsY0FBYSxJQUFJLENBQUM7d0JBQzNCLFdBQVcsSUFBSTtvQkFDakI7Z0JBQ0YsQ0FBQztZQUNIO1FBQ0Y7SUFDRjtJQUVBLE1BQUE7UUFBQSxTQUFVLENBQUE7Ozs7Ozs7Ozs7O0VBV1YsQ0FBQSxFQUFBO1lBQUEsV0FBQSxJQUFXO1lBQVg7Z0JBQUEsT0FBQSxLQUFBLFNBQUEsQ0FBQSxFQUFXO1lBQUQ7UUFBQTtJQUFBLENBWEE7QUFZWiJ9"],"names":["original","log","console","warn","error","debug","info","LEVELS","Object","keys","formatter","Intl","DateTimeFormat","hour","minute","second","fractionalSecondDigits","format","date1","LogList","precompileTemplate","strictMode","scope","Scroller","templateOnly","Logs","Component","logs","TrackedArray","constructor","owner1","args1","registerDestructor","forEach","level1","messageParts1","Promise","resolve","push","level","message","join","timestamp","Date","setComponentTemplate"],"mappings":";;;;;;;;AAAA;AAUA,MAAMA,QAAA,GAAW;EACfC,GAAA,EAAKC,OAAA,CAAQD,GAAG;EAChBE,IAAA,EAAMD,OAAA,CAAQC,IAAI;EAClBC,KAAA,EAAOF,OAAA,CAAQE,KAAK;EACpBC,KAAA,EAAOH,OAAA,CAAQG,KAAK;EACpBC,IAAA,EAAMJ,OAAA,CAAQI;AAChB,CAAA;AAIA,MAAMC,MAAA,GAASC,MAAA,CAAOC,IAAI,CAACT,QAAA,CAAa;AAExC,IAAIU,SAAA,GAAY,IAAIC,IAAA,CAAKC,cAAc,CAAC,OAAS,EAAA;AAC/CC,EAAAA,IAAA,EAAM,SAAA;AACNC,EAAAA,MAAA,EAAQ,SAAA;AACRC,EAAAA,MAAA,EAAQ,SAAA;AACRC,EAAAA,sBAAA,EAAwB;AAC1B,CAAA,CAAA;AAEA,MAAMC,MAAA,GAAUC,KAAM,IAASR,SAAA,CAAUO,MAAM,CAACC,KAAA,CAAA;AAQhD,MAAMC,UAIDC,oBAAAA,CAAAA,kBAAA,CAmBL,qsBAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,QAAA;AAAAN,IAAAA;AAAA,GAAA;AAAU,CAAA,CAAA,EAAAO,YAAA,EAAA,CAAA;AAEH,MAAMC,IAAA,SAAaC,SAAA,CAAA;EACxBC,IAAA,GAAO,IAAIC,YAAA,EAAa;EAExBC,WAAYC,CAAAA,MAAY,EAAEC,KAAS,EAAE;IACnC,KAAK,CAACD,MAAA,EAAOC,KAAA,CAAA;AAEbC,IAAAA,kBAAA,CAAmB,IAAI,EAAE,MACvBzB,MAAA,CAAO0B,OAAO,CAAEC,MAAA,IAAWhC,OAAO,CAACgC,MAAA,CAAM,GAAGlC,QAAQ,CAACkC,MAAA,CAAM,CAAA,CAAA;AAG7D,IAAA,KAAK,IAAIA,MAAA,IAAS3B,MAAA,EAAQ;AACxBL,MAAAA,OAAO,CAACgC,MAAA,CAAM,GAAG,CAAC,GAAGC,aAAA,KAAA;AACnB;AACA;AACA;AACAnC,QAAAA,QAAQ,CAACkC,MAAA,CAAM,CAAA,GAAIC,aAAA,CAAA;QAEnB,CAAC,YAAA;AACC;AACA;UACA,MAAMC,OAAA,CAAQC,OAAO,EAAA;AAErB,UAAA,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC;AACbC,YAAAA,KAAA,EAAAL,MAAA;AACAM,YAAAA,OAAA,EAASL,aAAA,CAAaM,IAAI,CAAC,GAAA,CAAA;YAC3BC,SAAA,EAAW,IAAIC,IAAA;AACjB,WAAA,CAAA;SACD,GAAA;AACH,OAAA;AACF;AACF;AAEA,EAAA;IAAAC,oBAAA,CAAAxB,kBAAA,CAWA,oYAAA,EAAA;MAAAC,UAAA,EAAA,IAAA;AAAAC,MAAAA,KAAA,EAAAA,OAAA;AAAAH,QAAAA;AAAA,OAAA;AAAU,KAAA,CAAA,EAAV,IAAW,CAAA;AAAD;AACZ;;;;"}