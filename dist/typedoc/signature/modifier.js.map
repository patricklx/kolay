{"version":3,"file":"modifier.js","sources":["../../../src/typedoc/signature/modifier.gts"],"sourcesContent":["/** eslint-disable @typescript-eslint/no-unused-vars */ import { template } from \"@ember/template-compiler\";\nimport { findChildDeclaration, Load } from '../utils.gts';\nimport { Args } from './args.gts';\nimport { Element } from './element.gts';\nimport type { TOC } from '@ember/component/template-only';\nfunction getSignatureType(info1: any) {\n    /**\n   * export const Foo: TOC<{ signature here }> = <template> ... </template>\n   */ if (info1.type?.type === 'reference' && info1.type?.typeArguments?.[0]?.type === 'reflection') {\n        return info1.type.typeArguments[0].declaration;\n    }\n    /**\n   * import { modifier } from 'ember-modifier';\n   *\n   * export const foo = modifier<{ ... }>(() => {});\n   */ /**\n   * (implicit signature)\n   *\n   * import { modifier } from 'ember-modifier';\n   *\n   * export const foo = modifier(() => {});\n   */ if (info1.variant === 'declaration' && 'type' in info1) {\n        if (info1.type.package === 'ember-modifier') {\n        // can't get at the inline signature here\n        }\n        /**\n     * import type { ModifierLike } from '@glint/template';\n     *\n     * export const X: ModifierLike<{ ... }>\n     */ if (info1.type.package === '@glint/template' && Array.isArray(info1.type.typeArguments) && info1.type.typeArguments.length > 0) {\n            return info1.type.typeArguments[0].declaration;\n        }\n    }\n    if (info1.variant === 'declaration' && 'extendedTypes' in info1) {\n        let extendedType1 = info1.extendedTypes?.[0];\n        if (extendedType1?.type === 'reference' && extendedType1?.package === 'ember-modifier') {\n            let typeArg1 = extendedType1.typeArguments?.[0];\n            if (typeArg1?.type === 'reflection') {\n                return typeArg1.declaration;\n            }\n        }\n    }\n    /**\n   * export interface Signature { ... }\n   */ return info1;\n}\nfunction getSignature(info1: any) {\n    let type1 = getSignatureType(info1);\n    if (!type1) {\n        console.warn('Could not finde signature');\n        return;\n    }\n    return {\n        Element: findChildDeclaration(type1, 'Element'),\n        Args: findChildDeclaration(type1, 'Args')\n    };\n}\nexport const ModifierSignature: TOC<{\n    Args: {\n        /**\n     * Which module to import the type from\n     */ module: string;\n        /**\n     * The name of the component to render the type / JSDoc of\n     */ name: string;\n        /**\n     * The name of the package to lookup the module and export name.\n     */ package: string;\n    };\n}> = template(`\n  <Load\n    @package={{@package}}\n    @module={{@module}}\n    @name={{@name}}\n    as |declaration|\n  >\n    {{#let (getSignature declaration) as |info|}}\n      <Element @kind='modifier' @info={{info.Element}} />\n      <Args @kind='modifier' @info={{info.Args}} />\n    {{/let}}\n  </Load>\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2tvbGF5L2tvbGF5L3VpL3NyYy90eXBlZG9jL3NpZ25hdHVyZS9tb2RpZmllci5ndHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgZmluZENoaWxkRGVjbGFyYXRpb24sIExvYWQgfSBmcm9tICcuLi91dGlscy5ndHMnO1xuaW1wb3J0IHsgQXJncyB9IGZyb20gJy4vYXJncy5ndHMnO1xuaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gJy4vZWxlbWVudC5ndHMnO1xuXG5pbXBvcnQgdHlwZSB7IFRPQyB9IGZyb20gJ0BlbWJlci9jb21wb25lbnQvdGVtcGxhdGUtb25seSc7XG5cbmZ1bmN0aW9uIGdldFNpZ25hdHVyZVR5cGUoaW5mbzogYW55KSB7XG4gIC8qKlxuICAgKiBleHBvcnQgY29uc3QgRm9vOiBUT0M8eyBzaWduYXR1cmUgaGVyZSB9PiA9IDx0ZW1wbGF0ZT4gLi4uIDwvdGVtcGxhdGU-XG4gICAqL1xuICBpZiAoXG4gICAgaW5mby50eXBlPy50eXBlID09PSAncmVmZXJlbmNlJyAmJlxuICAgIGluZm8udHlwZT8udHlwZUFyZ3VtZW50cz8uWzBdPy50eXBlID09PSAncmVmbGVjdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuIGluZm8udHlwZS50eXBlQXJndW1lbnRzWzBdLmRlY2xhcmF0aW9uO1xuICB9XG5cbiAgLyoqXG4gICAqIGltcG9ydCB7IG1vZGlmaWVyIH0gZnJvbSAnZW1iZXItbW9kaWZpZXInO1xuICAgKlxuICAgKiBleHBvcnQgY29uc3QgZm9vID0gbW9kaWZpZXI8eyAuLi4gfT4oKCkgPT4ge30pO1xuICAgKi9cbiAgLyoqXG4gICAqIChpbXBsaWNpdCBzaWduYXR1cmUpXG4gICAqXG4gICAqIGltcG9ydCB7IG1vZGlmaWVyIH0gZnJvbSAnZW1iZXItbW9kaWZpZXInO1xuICAgKlxuICAgKiBleHBvcnQgY29uc3QgZm9vID0gbW9kaWZpZXIoKCkgPT4ge30pO1xuICAgKi9cbiAgaWYgKGluZm8udmFyaWFudCA9PT0gJ2RlY2xhcmF0aW9uJyAmJiAndHlwZScgaW4gaW5mbykge1xuICAgIGlmIChpbmZvLnR5cGUucGFja2FnZSA9PT0gJ2VtYmVyLW1vZGlmaWVyJykge1xuICAgICAgLy8gY2FuJ3QgZ2V0IGF0IHRoZSBpbmxpbmUgc2lnbmF0dXJlIGhlcmVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBpbXBvcnQgdHlwZSB7IE1vZGlmaWVyTGlrZSB9IGZyb20gJ0BnbGludC90ZW1wbGF0ZSc7XG4gICAgICpcbiAgICAgKiBleHBvcnQgY29uc3QgWDogTW9kaWZpZXJMaWtlPHsgLi4uIH0-XG4gICAgICovXG4gICAgaWYgKFxuICAgICAgaW5mby50eXBlLnBhY2thZ2UgPT09ICdAZ2xpbnQvdGVtcGxhdGUnICYmXG4gICAgICBBcnJheS5pc0FycmF5KGluZm8udHlwZS50eXBlQXJndW1lbnRzKSAmJlxuICAgICAgaW5mby50eXBlLnR5cGVBcmd1bWVudHMubGVuZ3RoID4gMFxuICAgICkge1xuICAgICAgcmV0dXJuIGluZm8udHlwZS50eXBlQXJndW1lbnRzWzBdLmRlY2xhcmF0aW9uO1xuICAgIH1cbiAgfVxuXG4gIGlmIChpbmZvLnZhcmlhbnQgPT09ICdkZWNsYXJhdGlvbicgJiYgJ2V4dGVuZGVkVHlwZXMnIGluIGluZm8pIHtcbiAgICBsZXQgZXh0ZW5kZWRUeXBlID0gaW5mby5leHRlbmRlZFR5cGVzPy5bMF07XG5cbiAgICBpZiAoXG4gICAgICBleHRlbmRlZFR5cGU_LnR5cGUgPT09ICdyZWZlcmVuY2UnICYmXG4gICAgICBleHRlbmRlZFR5cGU_LnBhY2thZ2UgPT09ICdlbWJlci1tb2RpZmllcidcbiAgICApIHtcbiAgICAgIGxldCB0eXBlQXJnID0gZXh0ZW5kZWRUeXBlLnR5cGVBcmd1bWVudHM_LlswXTtcblxuICAgICAgaWYgKHR5cGVBcmc_LnR5cGUgPT09ICdyZWZsZWN0aW9uJykge1xuICAgICAgICByZXR1cm4gdHlwZUFyZy5kZWNsYXJhdGlvbjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogZXhwb3J0IGludGVyZmFjZSBTaWduYXR1cmUgeyAuLi4gfVxuICAgKi9cbiAgcmV0dXJuIGluZm87XG59XG5cbmZ1bmN0aW9uIGdldFNpZ25hdHVyZShpbmZvOiBhbnkpIHtcbiAgbGV0IHR5cGUgPSBnZXRTaWduYXR1cmVUeXBlKGluZm8pO1xuXG4gIGlmICghdHlwZSkge1xuICAgIGNvbnNvbGUud2FybignQ291bGQgbm90IGZpbmRlIHNpZ25hdHVyZScpO1xuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBFbGVtZW50OiBmaW5kQ2hpbGREZWNsYXJhdGlvbih0eXBlLCAnRWxlbWVudCcpLFxuICAgIEFyZ3M6IGZpbmRDaGlsZERlY2xhcmF0aW9uKHR5cGUsICdBcmdzJyksXG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCBNb2RpZmllclNpZ25hdHVyZTogVE9DPHtcbiAgQXJnczoge1xuICAgIC8qKlxuICAgICAqIFdoaWNoIG1vZHVsZSB0byBpbXBvcnQgdGhlIHR5cGUgZnJvbVxuICAgICAqL1xuICAgIG1vZHVsZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBuYW1lIG9mIHRoZSBjb21wb25lbnQgdG8gcmVuZGVyIHRoZSB0eXBlIC8gSlNEb2Mgb2ZcbiAgICAgKi9cbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIHBhY2thZ2UgdG8gbG9va3VwIHRoZSBtb2R1bGUgYW5kIGV4cG9ydCBuYW1lLlxuICAgICAqL1xuICAgIHBhY2thZ2U6IHN0cmluZztcbiAgfTtcbn0-ID0gPHRlbXBsYXRlPlxuICA8TG9hZFxuICAgIEBwYWNrYWdlPXt7QHBhY2thZ2V9fVxuICAgIEBtb2R1bGU9e3tAbW9kdWxlfX1cbiAgICBAbmFtZT17e0BuYW1lfX1cbiAgICBhcyB8ZGVjbGFyYXRpb258XG4gID5cbiAgICB7eyNsZXQgKGdldFNpZ25hdHVyZSBkZWNsYXJhdGlvbikgYXMgfGluZm98fX1cbiAgICAgIDxFbGVtZW50IEBraW5kPSdtb2RpZmllcicgQGluZm89e3tpbmZvLkVsZW1lbnR9fSAvPlxuICAgICAgPEFyZ3MgQGtpbmQ9J21vZGlmaWVyJyBAaW5mbz17e2luZm8uQXJnc319IC8-XG4gICAge3svbGV0fX1cbiAgPC9Mb2FkPlxuPC90ZW1wbGF0ZT47XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscURBQXFEO0FBQ3JELFNBQVMsb0JBQW9CLEVBQUUsSUFBSSxRQUFRLGVBQWU7QUFDMUQsU0FBUyxJQUFJLFFBQVEsYUFBYTtBQUNsQyxTQUFTLE9BQU8sUUFBUSxnQkFBZ0I7QUFFeEMsY0FBYyxHQUFHLFFBQVEsaUNBQWlDO0FBRTFELFNBQVMsaUJBQWlCLE9BQU0sR0FBRztJQUNqQzs7R0FFQyxHQUNELElBQ0UsTUFBSyxJQUFJLEVBQUUsU0FBUyxlQUNwQixNQUFLLElBQUksRUFBRSxlQUFlLENBQUMsRUFBRSxFQUFFLFNBQVMsY0FDeEM7UUFDQSxPQUFPLE1BQUssSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsV0FBVztJQUMvQztJQUVBOzs7O0dBSUMsR0FDRDs7Ozs7O0dBTUMsR0FDRCxJQUFJLE1BQUssT0FBTyxLQUFLLGlCQUFpQixVQUFVLE9BQU07UUFDcEQsSUFBSSxNQUFLLElBQUksQ0FBQyxPQUFPLEtBQUssa0JBQWtCO1FBQzFDLHlDQUF5QztRQUMzQztRQUVBOzs7O0tBSUMsR0FDRCxJQUNFLE1BQUssSUFBSSxDQUFDLE9BQU8sS0FBSyxxQkFDdEIsTUFBTSxPQUFPLENBQUMsTUFBSyxJQUFJLENBQUMsYUFBYSxLQUNyQyxNQUFLLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLEdBQ2pDO1lBQ0EsT0FBTyxNQUFLLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLFdBQVc7UUFDL0M7SUFDRjtJQUVBLElBQUksTUFBSyxPQUFPLEtBQUssaUJBQWlCLG1CQUFtQixPQUFNO1FBQzdELElBQUksZ0JBQWUsTUFBSyxhQUFhLEVBQUUsQ0FBQyxFQUFFO1FBRTFDLElBQ0UsZUFBYyxTQUFTLGVBQ3ZCLGVBQWMsWUFBWSxrQkFDMUI7WUFDQSxJQUFJLFdBQVUsY0FBYSxhQUFhLEVBQUUsQ0FBQyxFQUFFO1lBRTdDLElBQUksVUFBUyxTQUFTLGNBQWM7Z0JBQ2xDLE9BQU8sU0FBUSxXQUFXO1lBQzVCO1FBQ0Y7SUFDRjtJQUVBOztHQUVDLEdBQ0QsT0FBTztBQUNUO0FBRUEsU0FBUyxhQUFhLE9BQU0sR0FBRztJQUM3QixJQUFJLFFBQU8saUJBQWlCO0lBRTVCLElBQUksQ0FBQyxPQUFNO1FBQ1QsUUFBUSxJQUFJLENBQUM7UUFFYjtJQUNGO0lBRUEsT0FBTztRQUNMLFNBQVMscUJBQXFCLE9BQU07UUFDcEMsTUFBTSxxQkFBcUIsT0FBTTtJQUNuQztBQUNGO0FBRUEsT0FBTyxNQUFNLG1CQUFtQjtJQUM5QjtRQUNFOztLQUVDLEdBQ0QsUUFBUSxNQUFNO1FBQ2Q7O0tBRUMsR0FDRCxNQUFNLE1BQU07UUFDWjs7S0FFQyxHQUNELFNBQVMsTUFBTTs7S0FFZCxTQUFVLENBQUE7Ozs7Ozs7Ozs7OztBQVlmLENBQUEsRUFBQTtJQUFBO1FBQUEsT0FBQSxLQUFBLFNBQUEsQ0FBQSxFQUFXO0lBQUQ7QUFBQSxHQUFFIn0"],"names":["getSignatureType","info1","type","typeArguments","declaration","variant","package","Array","isArray","length","extendedType1","extendedTypes","typeArg1","getSignature","type1","console","warn","Element","findChildDeclaration","Args","ModifierSignature","precompileTemplate","strictMode","scope","Load","templateOnly"],"mappings":";;;;;;;AAAA;AAOA,SAASA,iBAAiBC,KAAS,EAAA;AACjC;;;AAGA,EAAA,IACEA,KAAA,CAAKC,IAAI,EAAEA,IAAA,KAAS,WACpBD,IAAAA,KAAA,CAAKC,IAAI,EAAEC,aAAA,GAAgB,EAAE,EAAED,IAAA,KAAS,YACxC,EAAA;IACA,OAAOD,KAAA,CAAKC,IAAI,CAACC,aAAa,CAAC,CAAA,CAAE,CAACC,WAAW;AAC/C;AAEA;;;;;;;;;;;AAYA,EAAA,IAAIH,KAAA,CAAKI,OAAO,KAAK,aAAiB,IAAA,MAAA,IAAUJ,KAAA,EAAM;AACpD,IAAA,IAAIA,KAAA,CAAKC,IAAI,CAACI,OAAO,KAAK,gBAAkB,EAAA;AAI5C;;;;;IAKA,IACEL,KAAA,CAAKC,IAAI,CAACI,OAAO,KAAK,iBACtBC,IAAAA,KAAA,CAAMC,OAAO,CAACP,KAAA,CAAKC,IAAI,CAACC,aAAa,CAAA,IACrCF,KAAA,CAAKC,IAAI,CAACC,aAAa,CAACM,MAAM,GAAG,CACjC,EAAA;MACA,OAAOR,KAAA,CAAKC,IAAI,CAACC,aAAa,CAAC,CAAA,CAAE,CAACC,WAAW;AAC/C;AACF;AAEA,EAAA,IAAIH,KAAA,CAAKI,OAAO,KAAK,aAAiB,IAAA,eAAA,IAAmBJ,KAAA,EAAM;AAC7D,IAAA,IAAIS,aAAA,GAAeT,KAAA,CAAKU,aAAa,GAAG,CAAE,CAAA;IAE1C,IACED,aAAA,EAAcR,IAAA,KAAS,eACvBQ,aAAA,EAAcJ,OAAA,KAAY,gBAC1B,EAAA;AACA,MAAA,IAAIM,QAAA,GAAUF,aAAA,CAAaP,aAAa,GAAG,CAAE,CAAA;AAE7C,MAAA,IAAIS,QAAA,EAASV,IAAA,KAAS,YAAc,EAAA;QAClC,OAAOU,QAAA,CAAQR,WAAW;AAC5B;AACF;AACF;AAEA;;;AAGA,EAAA,OAAOH,KAAA;AACT;AAEA,SAASY,aAAaZ,KAAS,EAAA;AAC7B,EAAA,IAAIa,KAAA,GAAOd,gBAAA,CAAiBC,KAAA,CAAA;EAE5B,IAAI,CAACa,KAAA,EAAM;IACTC,OAAA,CAAQC,IAAI,CAAC,2BAAA,CAAA;AAEb,IAAA;AACF;EAEA,OAAO;AACLC,IAAAA,OAAA,EAASC,oBAAA,CAAqBJ,KAAA,EAAM,SAAA,CAAA;AACpCK,IAAAA,IAAA,EAAMD,oBAAA,CAAqBJ,KAAA,EAAM,MAAA;AACnC,GAAA;AACF;AAEaM,MAAAA,oBAeRC,oBAAAA,CAAAA,kBAAA,CAYL,yRAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,IAAA;IAAAX,YAAA;IAAAI,OAAA;AAAAE,IAAAA;AAAA,GAAA;AAAU,CAAA,CAAA,EAAAM,YAAA,EAAA;;;;"}