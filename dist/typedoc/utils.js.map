{"version":3,"file":"utils.js","sources":["../../src/typedoc/utils.gts"],"sourcesContent":["import { template } from \"@ember/template-compiler\";\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { service } from '@ember/service';\nimport { trackedFunction } from 'reactiveweb/function';\nimport type APIDocsService from '../services/kolay/api-docs.ts';\nimport type { TOC } from '@ember/component/template-only';\nimport type { DeclarationReflection } from 'typedoc';\nexport function findChildDeclaration(info1: DeclarationReflection, name1: string) {\n    return info1.children?.find((child1)=>child1.variant === 'declaration' && child1.name === name1);\n}\nexport const infoFor = (data1: DeclarationReflection, module1: string, name1: string)=>{\n    let moduleType1 = data1.children?.find((child1)=>child1.name === module1);\n    assert(`Could not find module by name: ${module1}. Available modules in this set of api docs are: ${data1.children?.map((child1)=>child1.name).join(', ')}`, moduleType1);\n    let found1 = moduleType1?.children?.find((grandChild1)=>grandChild1.name === name1);\n    return found1 as DeclarationReflection | undefined;\n};\nexport const Query: TOC<{\n    Args: {\n        module: string;\n        name: string;\n        info: DeclarationReflection;\n    };\n    Blocks: {\n        default: [DeclarationReflection];\n        notFound: [];\n    };\n}> = template(`\n  {{#let (infoFor @info @module @name) as |info|}}\n    {{#if info}}\n      {{yield info}}\n    {{else}}\n      {{yield to='notFound'}}\n    {{/if}}\n  {{/let}}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nfunction isDeclarationReflection(info1: unknown): info is DeclarationReflection {\n    return true;\n}\nconst stringify = (x1: unknown)=>String(x1);\nexport class Load extends Component<{\n    Args: {\n        module: string;\n        name: string;\n        package: string;\n    };\n    Blocks: {\n        default: [DeclarationReflection, any];\n    };\n}> {\n    @service('kolay/api-docs')\n    apiDocs: APIDocsService;\n    /**\n   * TODO: move this to the service and dedupe requests\n   */ request = trackedFunction(this, async ()=>{\n        let { package: pkg1 } = this.args;\n        if (!pkg1) {\n            throw new Error(`A @package must be specified to load.`);\n        }\n        let req1 = await this.apiDocs.load(pkg1);\n        let json1 = await req1.json();\n        return json1;\n    });\n    static{\n        template(`\n    {{#if this.request.isLoading}}\n      Loading api docs...\n    {{/if}}\n\n    {{#if this.request.isError}}\n      {{stringify this.request.error}}\n    {{/if}}\n\n    {{#if this.request.value}}\n      <section>\n        {{#if (isDeclarationReflection this.request.value)}}\n          <Query\n            @info={{this.request.value}}\n            @module={{@module}}\n            @name={{@name}}\n            as |type|\n          >\n            {{yield type this.request.value}}\n          </Query>\n        {{/if}}\n      </section>\n    {{/if}}\n  `, {\n            component: this,\n            eval () {\n                return eval(arguments[0]);\n            }\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2tvbGF5L2tvbGF5L3VpL3NyYy90eXBlZG9jL3V0aWxzLmd0cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tcG9uZW50IGZyb20gJ0BnbGltbWVyL2NvbXBvbmVudCc7XG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tICdAZW1iZXIvZGVidWcnO1xuaW1wb3J0IHsgc2VydmljZSB9IGZyb20gJ0BlbWJlci9zZXJ2aWNlJztcblxuaW1wb3J0IHsgdHJhY2tlZEZ1bmN0aW9uIH0gZnJvbSAncmVhY3RpdmV3ZWIvZnVuY3Rpb24nO1xuXG5pbXBvcnQgdHlwZSBBUElEb2NzU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9rb2xheS9hcGktZG9jcy50cyc7XG5pbXBvcnQgdHlwZSB7IFRPQyB9IGZyb20gJ0BlbWJlci9jb21wb25lbnQvdGVtcGxhdGUtb25seSc7XG5pbXBvcnQgdHlwZSB7IERlY2xhcmF0aW9uUmVmbGVjdGlvbiB9IGZyb20gJ3R5cGVkb2MnO1xuXG5leHBvcnQgZnVuY3Rpb24gZmluZENoaWxkRGVjbGFyYXRpb24oXG4gIGluZm86IERlY2xhcmF0aW9uUmVmbGVjdGlvbixcbiAgbmFtZTogc3RyaW5nLFxuKSB7XG4gIHJldHVybiBpbmZvLmNoaWxkcmVuPy5maW5kKFxuICAgIChjaGlsZCkgPT4gY2hpbGQudmFyaWFudCA9PT0gJ2RlY2xhcmF0aW9uJyAmJiBjaGlsZC5uYW1lID09PSBuYW1lLFxuICApO1xufVxuXG5leHBvcnQgY29uc3QgaW5mb0ZvciA9IChcbiAgZGF0YTogRGVjbGFyYXRpb25SZWZsZWN0aW9uLFxuICBtb2R1bGU6IHN0cmluZyxcbiAgbmFtZTogc3RyaW5nLFxuKSA9PiB7XG4gIGxldCBtb2R1bGVUeXBlID0gZGF0YS5jaGlsZHJlbj8uZmluZCgoY2hpbGQpID0-IGNoaWxkLm5hbWUgPT09IG1vZHVsZSk7XG5cbiAgYXNzZXJ0KFxuICAgIGBDb3VsZCBub3QgZmluZCBtb2R1bGUgYnkgbmFtZTogJHttb2R1bGV9LiBBdmFpbGFibGUgbW9kdWxlcyBpbiB0aGlzIHNldCBvZiBhcGkgZG9jcyBhcmU6ICR7ZGF0YS5jaGlsZHJlblxuICAgICAgPy5tYXAoKGNoaWxkKSA9PiBjaGlsZC5uYW1lKVxuICAgICAgLmpvaW4oJywgJyl9YCxcbiAgICBtb2R1bGVUeXBlLFxuICApO1xuXG4gIGxldCBmb3VuZCA9IG1vZHVsZVR5cGU_LmNoaWxkcmVuPy5maW5kKFxuICAgIChncmFuZENoaWxkKSA9PiBncmFuZENoaWxkLm5hbWUgPT09IG5hbWUsXG4gICk7XG5cbiAgcmV0dXJuIGZvdW5kIGFzIERlY2xhcmF0aW9uUmVmbGVjdGlvbiB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBRdWVyeTogVE9DPHtcbiAgQXJnczogeyBtb2R1bGU6IHN0cmluZzsgbmFtZTogc3RyaW5nOyBpbmZvOiBEZWNsYXJhdGlvblJlZmxlY3Rpb24gfTtcbiAgQmxvY2tzOiB7IGRlZmF1bHQ6IFtEZWNsYXJhdGlvblJlZmxlY3Rpb25dOyBub3RGb3VuZDogW10gfTtcbn0-ID0gPHRlbXBsYXRlPlxuICB7eyNsZXQgKGluZm9Gb3IgQGluZm8gQG1vZHVsZSBAbmFtZSkgYXMgfGluZm98fX1cbiAgICB7eyNpZiBpbmZvfX1cbiAgICAgIHt7eWllbGQgaW5mb319XG4gICAge3tlbHNlfX1cbiAgICAgIHt7eWllbGQgdG89J25vdEZvdW5kJ319XG4gICAge3svaWZ9fVxuICB7ey9sZXR9fVxuPC90ZW1wbGF0ZT47XG5cbmZ1bmN0aW9uIGlzRGVjbGFyYXRpb25SZWZsZWN0aW9uKGluZm86IHVua25vd24pOiBpbmZvIGlzIERlY2xhcmF0aW9uUmVmbGVjdGlvbiB7XG4gIHJldHVybiB0cnVlO1xufVxuXG5jb25zdCBzdHJpbmdpZnkgPSAoeDogdW5rbm93bikgPT4gU3RyaW5nKHgpO1xuXG5leHBvcnQgY2xhc3MgTG9hZCBleHRlbmRzIENvbXBvbmVudDx7XG4gIEFyZ3M6IHtcbiAgICBtb2R1bGU6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgcGFja2FnZTogc3RyaW5nO1xuICB9O1xuICBCbG9ja3M6IHsgZGVmYXVsdDogW0RlY2xhcmF0aW9uUmVmbGVjdGlvbiwgYW55XSB9O1xufT4ge1xuICBAc2VydmljZSgna29sYXkvYXBpLWRvY3MnKSBkZWNsYXJlIGFwaURvY3M6IEFQSURvY3NTZXJ2aWNlO1xuXG4gIC8qKlxuICAgKiBUT0RPOiBtb3ZlIHRoaXMgdG8gdGhlIHNlcnZpY2UgYW5kIGRlZHVwZSByZXF1ZXN0c1xuICAgKi9cbiAgcmVxdWVzdCA9IHRyYWNrZWRGdW5jdGlvbih0aGlzLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IHsgcGFja2FnZTogcGtnIH0gPSB0aGlzLmFyZ3M7XG5cbiAgICBpZiAoIXBrZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBBIEBwYWNrYWdlIG11c3QgYmUgc3BlY2lmaWVkIHRvIGxvYWQuYCk7XG4gICAgfVxuXG4gICAgbGV0IHJlcSA9IGF3YWl0IHRoaXMuYXBpRG9jcy5sb2FkKHBrZyk7XG4gICAgbGV0IGpzb24gPSBhd2FpdCByZXEuanNvbigpO1xuXG4gICAgcmV0dXJuIGpzb247XG4gIH0pO1xuXG4gIDx0ZW1wbGF0ZT5cbiAgICB7eyNpZiB0aGlzLnJlcXVlc3QuaXNMb2FkaW5nfX1cbiAgICAgIExvYWRpbmcgYXBpIGRvY3MuLi5cbiAgICB7ey9pZn19XG5cbiAgICB7eyNpZiB0aGlzLnJlcXVlc3QuaXNFcnJvcn19XG4gICAgICB7e3N0cmluZ2lmeSB0aGlzLnJlcXVlc3QuZXJyb3J9fVxuICAgIHt7L2lmfX1cblxuICAgIHt7I2lmIHRoaXMucmVxdWVzdC52YWx1ZX19XG4gICAgICA8c2VjdGlvbj5cbiAgICAgICAge3sjaWYgKGlzRGVjbGFyYXRpb25SZWZsZWN0aW9uIHRoaXMucmVxdWVzdC52YWx1ZSl9fVxuICAgICAgICAgIDxRdWVyeVxuICAgICAgICAgICAgQGluZm89e3t0aGlzLnJlcXVlc3QudmFsdWV9fVxuICAgICAgICAgICAgQG1vZHVsZT17e0Btb2R1bGV9fVxuICAgICAgICAgICAgQG5hbWU9e3tAbmFtZX19XG4gICAgICAgICAgICBhcyB8dHlwZXxcbiAgICAgICAgICA-XG4gICAgICAgICAgICB7e3lpZWxkIHR5cGUgdGhpcy5yZXF1ZXN0LnZhbHVlfX1cbiAgICAgICAgICA8L1F1ZXJ5PlxuICAgICAgICB7ey9pZn19XG4gICAgICA8L3NlY3Rpb24-XG4gICAge3svaWZ9fVxuICA8L3RlbXBsYXRlPlxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLGVBQWUscUJBQXFCO0FBQzNDLFNBQVMsTUFBTSxRQUFRLGVBQWU7QUFDdEMsU0FBUyxPQUFPLFFBQVEsaUJBQWlCO0FBRXpDLFNBQVMsZUFBZSxRQUFRLHVCQUF1QjtBQUV2RCxZQUFZLG9CQUFvQixnQ0FBZ0M7QUFDaEUsY0FBYyxHQUFHLFFBQVEsaUNBQWlDO0FBQzFELGNBQWMscUJBQXFCLFFBQVEsVUFBVTtBQUVyRCxPQUFPLFNBQVMscUJBQ2QsT0FBTSxxQkFBcUIsRUFDM0IsT0FBTSxNQUFNO0lBRVosT0FBTyxNQUFLLFFBQVEsRUFBRSxLQUNwQixDQUFDLFNBQVUsT0FBTSxPQUFPLEtBQUssaUJBQWlCLE9BQU0sSUFBSSxLQUFLO0FBRWpFO0FBRUEsT0FBTyxNQUFNLFVBQVUsQ0FDckIsT0FBTSx1QkFDTixTQUFRLE1BQU0sRUFDZCxPQUFNLE1BQU07SUFFWixJQUFJLGNBQWEsTUFBSyxRQUFRLEVBQUUsS0FBSyxDQUFDLFNBQVUsT0FBTSxJQUFJLEtBQUs7SUFFL0QsT0FDRSxDQUFDLCtCQUErQixFQUFFLFFBQU8saURBQWlELEVBQUUsTUFBSyxRQUFRLEVBQ3JHLElBQUksQ0FBQyxTQUFVLE9BQU0sSUFBSSxFQUMxQixLQUFLLE1BQU0sQ0FBQyxFQUNmO0lBR0YsSUFBSSxTQUFRLGFBQVksVUFBVSxLQUNoQyxDQUFDLGNBQWUsWUFBVyxJQUFJLEtBQUs7SUFHdEMsT0FBTyxVQUFTLHdCQUF3QixTQUFTO0FBQ25ELEVBQUU7QUFFRixPQUFPLE1BQU0sT0FBTztJQUNsQjtRQUFRLFFBQVEsTUFBTTtRQUFFLE1BQU0sTUFBTTtRQUFFLE1BQU07O0lBQzVDO1FBQVUsVUFBVTtRQUF3Qjs7S0FDekMsU0FBVSxDQUFBOzs7Ozs7OztBQVFmLENBQUEsRUFBQTtJQUFBO1FBQUEsT0FBQSxLQUFBLFNBQUEsQ0FBQSxFQUFXO0lBQUQ7QUFBQSxHQUFFO0FBRVosU0FBUyx3QkFBd0IsT0FBTSxPQUFPLEdBQUcsUUFBUTtJQUN2RCxPQUFPO0FBQ1Q7QUFFQSxNQUFNLFlBQVksQ0FBQyxJQUFHLE9BQU8sR0FBSyxPQUFPO0FBRXpDLE9BQU8sTUFBTSxhQUFhO0lBQ3hCO1FBQ0UsUUFBUSxNQUFNO1FBQ2QsTUFBTSxNQUFNO1FBQ1osU0FBUyxNQUFNOztJQUVqQjtRQUFVLFVBQVUsdUJBQXVCLEdBQUc7OztJQUU5QyxDQUFDLFFBQVE7SUFBMEIsU0FBUyxlQUFlO0lBRTNEOztHQUVDLEdBQ0QsVUFBVSxnQkFBZ0IsSUFBSSxFQUFFO1FBQzlCLElBQUksRUFBRSxTQUFTLElBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJO1FBRWhDLElBQUksQ0FBQyxNQUFLO1lBQ1IsTUFBTSxJQUFJLE1BQU0sQ0FBQyxxQ0FBcUMsQ0FBQztRQUN6RDtRQUVBLElBQUksT0FBTSxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xDLElBQUksUUFBTyxNQUFNLEtBQUksSUFBSTtRQUV6QixPQUFPO0lBQ1QsR0FBRztJQUVILE1BQUE7UUFBQSxTQUFVLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBdUJWLENBQUEsRUFBQTtZQUFBLFdBQUEsSUFBVztZQUFYO2dCQUFBLE9BQUEsS0FBQSxTQUFBLENBQUEsRUFBVztZQUFEO1FBQUE7SUFBQSxDQXZCQTtBQXdCWiJ9"],"names":["findChildDeclaration","info1","name1","children","find","child1","variant","name","infoFor","data1","module1","moduleType1","assert","map","join","found1","grandChild1","Query","precompileTemplate","strictMode","scope","templateOnly","isDeclarationReflection","stringify","x1","String","Load","Component","service","i","void 0","request","trackedFunction","package","pkg1","args","Error","req1","apiDocs","load","json1","json","setComponentTemplate"],"mappings":";;;;;;;;;AAUO,SAASA,oBAAAA,CACdC,KAA2B,EAC3BC,KAAY,EAAA;AAEZ,EAAA,OAAOD,KAAA,CAAKE,QAAQ,EAAEC,IAAA,CACnBC,MAAA,IAAUA,MAAA,CAAMC,OAAO,KAAK,aAAA,IAAiBD,MAAA,CAAME,IAAI,KAAKL,KAAA,CAAA;AAEjE;AAEO,MAAMM,OAAA,GAAUA,CACrBC,KAAM,EACNC,OAAc,EACdR,KAAY,KAAA;AAEZ,EAAA,IAAIS,WAAA,GAAaF,KAAA,CAAKN,QAAQ,EAAEC,IAAA,CAAMC,MAAA,IAAUA,MAAA,CAAME,IAAI,KAAKG,OAAA,CAAA;EAE/DE,MAAA,CACE,kCAAkCF,OAAA,CAAA,iDAAA,EAA0DD,KAAA,CAAKN,QAAQ,EACrGU,GAAA,CAAKR,MAAA,IAAUA,MAAA,CAAME,IAAI,CAAA,CAC1BO,IAAA,CAAK,IAAA,CAAA,CAAA,CAAO,EACfH,WAAA,CAAA;AAGF,EAAA,IAAII,MAAA,GAAQJ,WAAA,EAAYR,QAAA,EAAUC,IAAA,CAC/BY,WAAA,IAAeA,WAAA,CAAWT,IAAI,KAAKL,KAAA,CAAA;AAGtC,EAAA,OAAOa,MAAA;AACT;AAEaE,MAAAA,QAGRC,oBAAAA,CAAAA,kBAAA,CAQL,wKAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;AAAAZ,IAAAA;AAAA,GAAA;AAAU,CAAA,CAAA,EAAAa,YAAA,EAAA;AAEV,SAASC,uBAAAA,CAAwBrB,KAAa,EAAW;EACvD,OAAO,IAAA;AACT;AAEA,MAAMsB,SAAA,GAAaC,EAAU,IAAKC,MAAA,CAAOD,EAAA,CAAA;AAElC,MAAME,IAAA,SAAaC,SAAA;;AAQvBC,IAAAA,CAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAAA,SAAAA,EAAAA,CAAAA,OAAA,CAAQ,gBAAA,CAAA,CAAA,CAAA;AAAA;AAAA,EAAA,QAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,SAAA,CAAA,EAAAC,KAAA,CAAA;AAET;;;AAGAC,EAAAA,OAAA,GAAUC,eAAA,CAAgB,IAAI,EAAE,YAAA;IAC9B,IAAI;AAAEC,MAAAA,OAAA,EAASC;KAAK,GAAG,IAAI,CAACC,IAAI;IAEhC,IAAI,CAACD,IAAA,EAAK;MACR,MAAM,IAAIE,KAAA,CAAM,CAAuC,qCAAA,CAAA,CAAA;AACzD;IAEA,IAAIC,IAAA,GAAM,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAACL,IAAA,CAAA;AAClC,IAAA,IAAIM,KAAA,GAAO,MAAMH,IAAA,CAAII,IAAI,EAAA;AAEzB,IAAA,OAAOD,KAAA;AACT,GAAA,CAAA;AAEA,EAAA;IAAAE,oBAAA,CAAAxB,kBAAA,CAuBA,6eAAA,EAAA;MAAAC,UAAA,EAAA,IAAA;AAAAC,MAAAA,KAAA,EAAAA,OAAA;QAAAG,SAAA;QAAAD,uBAAA;AAAAL,QAAAA;AAAA,OAAA;AAAU,KAAA,CAAA,EAAV,IAAW,CAAA;AAAD;AACZ;;;;"}